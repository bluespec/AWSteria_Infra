//
// Generated by Bluespec Compiler (build 0fccbb13)
//
// and then manually edited to delete entire module inner contents
// because we are only interested in the port list, for creating the
// reclocking block diagram.
//
// Ports:
// Name                         I/O  size props
// host_AXI4_S_awready            O     1 reg
// host_AXI4_S_wready             O     1 reg
// host_AXI4_S_bvalid             O     1 reg
// host_AXI4_S_bid                O    16 reg
// host_AXI4_S_bresp              O     2 reg
// host_AXI4_S_arready            O     1 reg
// host_AXI4_S_rvalid             O     1 reg
// host_AXI4_S_rid                O    16 reg
// host_AXI4_S_rdata              O   512 reg
// host_AXI4_S_rresp              O     2 reg
// host_AXI4_S_rlast              O     1 reg
// host_AXI4L_S_awready           O     1 reg
// host_AXI4L_S_wready            O     1 reg
// host_AXI4L_S_bvalid            O     1 reg
// host_AXI4L_S_bresp             O     2 reg
// host_AXI4L_S_arready           O     1 reg
// host_AXI4L_S_rvalid            O     1 reg
// host_AXI4L_S_rresp             O     2 reg
// host_AXI4L_S_rdata             O    32 reg
// ddr_A_M_awvalid                O     1 reg
// ddr_A_M_awid                   O    16 reg
// ddr_A_M_awaddr                 O    64 reg
// ddr_A_M_awlen                  O     8 reg
// ddr_A_M_awsize                 O     3 reg
// ddr_A_M_awburst                O     2 reg
// ddr_A_M_awlock                 O     1 reg
// ddr_A_M_awcache                O     4 reg
// ddr_A_M_awprot                 O     3 reg
// ddr_A_M_awqos                  O     4 reg
// ddr_A_M_awregion               O     4 reg
// ddr_A_M_wvalid                 O     1 reg
// ddr_A_M_wdata                  O   512 reg
// ddr_A_M_wstrb                  O    64 reg
// ddr_A_M_wlast                  O     1 reg
// ddr_A_M_bready                 O     1 reg
// ddr_A_M_arvalid                O     1 reg
// ddr_A_M_arid                   O    16 reg
// ddr_A_M_araddr                 O    64 reg
// ddr_A_M_arlen                  O     8 reg
// ddr_A_M_arsize                 O     3 reg
// ddr_A_M_arburst                O     2 reg
// ddr_A_M_arlock                 O     1 reg
// ddr_A_M_arcache                O     4 reg
// ddr_A_M_arprot                 O     3 reg
// ddr_A_M_arqos                  O     4 reg
// ddr_A_M_arregion               O     4 reg
// ddr_A_M_rready                 O     1 reg
// ddr_B_M_awvalid                O     1 reg
// ddr_B_M_awid                   O    16 reg
// ddr_B_M_awaddr                 O    64 reg
// ddr_B_M_awlen                  O     8 reg
// ddr_B_M_awsize                 O     3 reg
// ddr_B_M_awburst                O     2 reg
// ddr_B_M_awlock                 O     1 reg
// ddr_B_M_awcache                O     4 reg
// ddr_B_M_awprot                 O     3 reg
// ddr_B_M_awqos                  O     4 reg
// ddr_B_M_awregion               O     4 reg
// ddr_B_M_wvalid                 O     1 reg
// ddr_B_M_wdata                  O   512 reg
// ddr_B_M_wstrb                  O    64 reg
// ddr_B_M_wlast                  O     1 reg
// ddr_B_M_bready                 O     1 reg
// ddr_B_M_arvalid                O     1 reg
// ddr_B_M_arid                   O    16 reg
// ddr_B_M_araddr                 O    64 reg
// ddr_B_M_arlen                  O     8 reg
// ddr_B_M_arsize                 O     3 reg
// ddr_B_M_arburst                O     2 reg
// ddr_B_M_arlock                 O     1 reg
// ddr_B_M_arcache                O     4 reg
// ddr_B_M_arprot                 O     3 reg
// ddr_B_M_arqos                  O     4 reg
// ddr_B_M_arregion               O     4 reg
// ddr_B_M_rready                 O     1 reg
// m_halted                       O     1 reg
// CLK_clk1                       I     1 unused
// CLK_clk2                       I     1 unused
// CLK_clk3                       I     1 unused
// CLK_clk4                       I     1 unused
// CLK_clk5                       I     1 unused
// CLK                            I     1 clock
// RST_N                          I     1 reset
// host_AXI4_S_awvalid            I     1
// host_AXI4_S_awid               I    16 reg
// host_AXI4_S_awaddr             I    64 reg
// host_AXI4_S_awlen              I     8 reg
// host_AXI4_S_awsize             I     3 reg
// host_AXI4_S_awburst            I     2 reg
// host_AXI4_S_awlock             I     1 reg
// host_AXI4_S_awcache            I     4 reg
// host_AXI4_S_awprot             I     3 reg
// host_AXI4_S_awqos              I     4 reg
// host_AXI4_S_awregion           I     4 reg
// host_AXI4_S_wvalid             I     1
// host_AXI4_S_wdata              I   512 reg
// host_AXI4_S_wstrb              I    64 reg
// host_AXI4_S_wlast              I     1 reg
// host_AXI4_S_bready             I     1
// host_AXI4_S_arvalid            I     1
// host_AXI4_S_arid               I    16 reg
// host_AXI4_S_araddr             I    64 reg
// host_AXI4_S_arlen              I     8 reg
// host_AXI4_S_arsize             I     3 reg
// host_AXI4_S_arburst            I     2 reg
// host_AXI4_S_arlock             I     1 reg
// host_AXI4_S_arcache            I     4 reg
// host_AXI4_S_arprot             I     3 reg
// host_AXI4_S_arqos              I     4 reg
// host_AXI4_S_arregion           I     4 reg
// host_AXI4_S_rready             I     1
// host_AXI4L_S_awvalid           I     1
// host_AXI4L_S_awaddr            I    32 reg
// host_AXI4L_S_awprot            I     3 reg
// host_AXI4L_S_wvalid            I     1
// host_AXI4L_S_wdata             I    32 reg
// host_AXI4L_S_wstrb             I     4 reg
// host_AXI4L_S_bready            I     1
// host_AXI4L_S_arvalid           I     1
// host_AXI4L_S_araddr            I    32 reg
// host_AXI4L_S_arprot            I     3 reg
// host_AXI4L_S_rready            I     1
// ddr_A_M_awready                I     1
// ddr_A_M_wready                 I     1
// ddr_A_M_bvalid                 I     1
// ddr_A_M_bid                    I    16 reg
// ddr_A_M_bresp                  I     2 reg
// ddr_A_M_arready                I     1
// ddr_A_M_rvalid                 I     1
// ddr_A_M_rid                    I    16 reg
// ddr_A_M_rdata                  I   512 reg
// ddr_A_M_rresp                  I     2 reg
// ddr_A_M_rlast                  I     1 reg
// ddr_B_M_awready                I     1
// ddr_B_M_wready                 I     1
// ddr_B_M_bvalid                 I     1
// ddr_B_M_bid                    I    16 reg
// ddr_B_M_bresp                  I     2 reg
// ddr_B_M_arready                I     1
// ddr_B_M_rvalid                 I     1
// ddr_B_M_rid                    I    16 reg
// ddr_B_M_rdata                  I   512 reg
// ddr_B_M_rresp                  I     2 reg
// ddr_B_M_rlast                  I     1 reg
// m_env_ready_env_ready          I     1 reg
// m_glcount_glcount              I    64 reg
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkAWSteria_HW(CLK_clk1,
                     CLK_clk2,
                     CLK_clk3,
                     CLK_clk4,
                     CLK_clk5,
		     CLK,
		     RST_N,

		     host_AXI4_S_awvalid,
		     host_AXI4_S_awid,
		     host_AXI4_S_awaddr,
		     host_AXI4_S_awlen,
		     host_AXI4_S_awsize,
		     host_AXI4_S_awburst,
		     host_AXI4_S_awlock,
		     host_AXI4_S_awcache,
		     host_AXI4_S_awprot,
		     host_AXI4_S_awqos,
		     host_AXI4_S_awregion,

		     host_AXI4_S_awready,

		     host_AXI4_S_wvalid,
		     host_AXI4_S_wdata,
		     host_AXI4_S_wstrb,
		     host_AXI4_S_wlast,

		     host_AXI4_S_wready,

		     host_AXI4_S_bvalid,

		     host_AXI4_S_bid,

		     host_AXI4_S_bresp,

		     host_AXI4_S_bready,

		     host_AXI4_S_arvalid,
		     host_AXI4_S_arid,
		     host_AXI4_S_araddr,
		     host_AXI4_S_arlen,
		     host_AXI4_S_arsize,
		     host_AXI4_S_arburst,
		     host_AXI4_S_arlock,
		     host_AXI4_S_arcache,
		     host_AXI4_S_arprot,
		     host_AXI4_S_arqos,
		     host_AXI4_S_arregion,

		     host_AXI4_S_arready,

		     host_AXI4_S_rvalid,

		     host_AXI4_S_rid,

		     host_AXI4_S_rdata,

		     host_AXI4_S_rresp,

		     host_AXI4_S_rlast,

		     host_AXI4_S_rready,

		     host_AXI4L_S_awvalid,
		     host_AXI4L_S_awaddr,
		     host_AXI4L_S_awprot,

		     host_AXI4L_S_awready,

		     host_AXI4L_S_wvalid,
		     host_AXI4L_S_wdata,
		     host_AXI4L_S_wstrb,

		     host_AXI4L_S_wready,

		     host_AXI4L_S_bvalid,

		     host_AXI4L_S_bresp,

		     host_AXI4L_S_bready,

		     host_AXI4L_S_arvalid,
		     host_AXI4L_S_araddr,
		     host_AXI4L_S_arprot,

		     host_AXI4L_S_arready,

		     host_AXI4L_S_rvalid,

		     host_AXI4L_S_rresp,

		     host_AXI4L_S_rdata,

		     host_AXI4L_S_rready,

		     ddr_A_M_awvalid,

		     ddr_A_M_awid,

		     ddr_A_M_awaddr,

		     ddr_A_M_awlen,

		     ddr_A_M_awsize,

		     ddr_A_M_awburst,

		     ddr_A_M_awlock,

		     ddr_A_M_awcache,

		     ddr_A_M_awprot,

		     ddr_A_M_awqos,

		     ddr_A_M_awregion,

		     ddr_A_M_awready,

		     ddr_A_M_wvalid,

		     ddr_A_M_wdata,

		     ddr_A_M_wstrb,

		     ddr_A_M_wlast,

		     ddr_A_M_wready,

		     ddr_A_M_bvalid,
		     ddr_A_M_bid,
		     ddr_A_M_bresp,

		     ddr_A_M_bready,

		     ddr_A_M_arvalid,

		     ddr_A_M_arid,

		     ddr_A_M_araddr,

		     ddr_A_M_arlen,

		     ddr_A_M_arsize,

		     ddr_A_M_arburst,

		     ddr_A_M_arlock,

		     ddr_A_M_arcache,

		     ddr_A_M_arprot,

		     ddr_A_M_arqos,

		     ddr_A_M_arregion,

		     ddr_A_M_arready,

		     ddr_A_M_rvalid,
		     ddr_A_M_rid,
		     ddr_A_M_rdata,
		     ddr_A_M_rresp,
		     ddr_A_M_rlast,

		     ddr_A_M_rready,

		     ddr_B_M_awvalid,

		     ddr_B_M_awid,

		     ddr_B_M_awaddr,

		     ddr_B_M_awlen,

		     ddr_B_M_awsize,

		     ddr_B_M_awburst,

		     ddr_B_M_awlock,

		     ddr_B_M_awcache,

		     ddr_B_M_awprot,

		     ddr_B_M_awqos,

		     ddr_B_M_awregion,

		     ddr_B_M_awready,

		     ddr_B_M_wvalid,

		     ddr_B_M_wdata,

		     ddr_B_M_wstrb,

		     ddr_B_M_wlast,

		     ddr_B_M_wready,

		     ddr_B_M_bvalid,
		     ddr_B_M_bid,
		     ddr_B_M_bresp,

		     ddr_B_M_bready,

		     ddr_B_M_arvalid,

		     ddr_B_M_arid,

		     ddr_B_M_araddr,

		     ddr_B_M_arlen,

		     ddr_B_M_arsize,

		     ddr_B_M_arburst,

		     ddr_B_M_arlock,

		     ddr_B_M_arcache,

		     ddr_B_M_arprot,

		     ddr_B_M_arqos,

		     ddr_B_M_arregion,

		     ddr_B_M_arready,

		     ddr_B_M_rvalid,
		     ddr_B_M_rid,
		     ddr_B_M_rdata,
		     ddr_B_M_rresp,
		     ddr_B_M_rlast,

		     ddr_B_M_rready,

		     m_env_ready_env_ready,

		     m_halted,

		     m_glcount_glcount);
  input  CLK_clk1;
  input  CLK_clk2;
  input  CLK_clk3;
  input  CLK_clk4;
  input  CLK_clk5;
  input  CLK;
  input  RST_N;

  // action method host_AXI4_S_m_awvalid
  input  host_AXI4_S_awvalid;
  input  [15 : 0] host_AXI4_S_awid;
  input  [63 : 0] host_AXI4_S_awaddr;
  input  [7 : 0] host_AXI4_S_awlen;
  input  [2 : 0] host_AXI4_S_awsize;
  input  [1 : 0] host_AXI4_S_awburst;
  input  host_AXI4_S_awlock;
  input  [3 : 0] host_AXI4_S_awcache;
  input  [2 : 0] host_AXI4_S_awprot;
  input  [3 : 0] host_AXI4_S_awqos;
  input  [3 : 0] host_AXI4_S_awregion;

  // value method host_AXI4_S_m_awready
  output host_AXI4_S_awready;

  // action method host_AXI4_S_m_wvalid
  input  host_AXI4_S_wvalid;
  input  [511 : 0] host_AXI4_S_wdata;
  input  [63 : 0] host_AXI4_S_wstrb;
  input  host_AXI4_S_wlast;

  // value method host_AXI4_S_m_wready
  output host_AXI4_S_wready;

  // value method host_AXI4_S_m_bvalid
  output host_AXI4_S_bvalid;

  // value method host_AXI4_S_m_bid
  output [15 : 0] host_AXI4_S_bid;

  // value method host_AXI4_S_m_bresp
  output [1 : 0] host_AXI4_S_bresp;

  // value method host_AXI4_S_m_buser

  // action method host_AXI4_S_m_bready
  input  host_AXI4_S_bready;

  // action method host_AXI4_S_m_arvalid
  input  host_AXI4_S_arvalid;
  input  [15 : 0] host_AXI4_S_arid;
  input  [63 : 0] host_AXI4_S_araddr;
  input  [7 : 0] host_AXI4_S_arlen;
  input  [2 : 0] host_AXI4_S_arsize;
  input  [1 : 0] host_AXI4_S_arburst;
  input  host_AXI4_S_arlock;
  input  [3 : 0] host_AXI4_S_arcache;
  input  [2 : 0] host_AXI4_S_arprot;
  input  [3 : 0] host_AXI4_S_arqos;
  input  [3 : 0] host_AXI4_S_arregion;

  // value method host_AXI4_S_m_arready
  output host_AXI4_S_arready;

  // value method host_AXI4_S_m_rvalid
  output host_AXI4_S_rvalid;

  // value method host_AXI4_S_m_rid
  output [15 : 0] host_AXI4_S_rid;

  // value method host_AXI4_S_m_rdata
  output [511 : 0] host_AXI4_S_rdata;

  // value method host_AXI4_S_m_rresp
  output [1 : 0] host_AXI4_S_rresp;

  // value method host_AXI4_S_m_rlast
  output host_AXI4_S_rlast;

  // value method host_AXI4_S_m_ruser

  // action method host_AXI4_S_m_rready
  input  host_AXI4_S_rready;

  // action method host_AXI4L_S_m_awvalid
  input  host_AXI4L_S_awvalid;
  input  [31 : 0] host_AXI4L_S_awaddr;
  input  [2 : 0] host_AXI4L_S_awprot;

  // value method host_AXI4L_S_m_awready
  output host_AXI4L_S_awready;

  // action method host_AXI4L_S_m_wvalid
  input  host_AXI4L_S_wvalid;
  input  [31 : 0] host_AXI4L_S_wdata;
  input  [3 : 0] host_AXI4L_S_wstrb;

  // value method host_AXI4L_S_m_wready
  output host_AXI4L_S_wready;

  // value method host_AXI4L_S_m_bvalid
  output host_AXI4L_S_bvalid;

  // value method host_AXI4L_S_m_bresp
  output [1 : 0] host_AXI4L_S_bresp;

  // value method host_AXI4L_S_m_buser

  // action method host_AXI4L_S_m_bready
  input  host_AXI4L_S_bready;

  // action method host_AXI4L_S_m_arvalid
  input  host_AXI4L_S_arvalid;
  input  [31 : 0] host_AXI4L_S_araddr;
  input  [2 : 0] host_AXI4L_S_arprot;

  // value method host_AXI4L_S_m_arready
  output host_AXI4L_S_arready;

  // value method host_AXI4L_S_m_rvalid
  output host_AXI4L_S_rvalid;

  // value method host_AXI4L_S_m_rresp
  output [1 : 0] host_AXI4L_S_rresp;

  // value method host_AXI4L_S_m_rdata
  output [31 : 0] host_AXI4L_S_rdata;

  // value method host_AXI4L_S_m_ruser

  // action method host_AXI4L_S_m_rready
  input  host_AXI4L_S_rready;

  // value method ddr_A_M_m_awvalid
  output ddr_A_M_awvalid;

  // value method ddr_A_M_m_awid
  output [15 : 0] ddr_A_M_awid;

  // value method ddr_A_M_m_awaddr
  output [63 : 0] ddr_A_M_awaddr;

  // value method ddr_A_M_m_awlen
  output [7 : 0] ddr_A_M_awlen;

  // value method ddr_A_M_m_awsize
  output [2 : 0] ddr_A_M_awsize;

  // value method ddr_A_M_m_awburst
  output [1 : 0] ddr_A_M_awburst;

  // value method ddr_A_M_m_awlock
  output ddr_A_M_awlock;

  // value method ddr_A_M_m_awcache
  output [3 : 0] ddr_A_M_awcache;

  // value method ddr_A_M_m_awprot
  output [2 : 0] ddr_A_M_awprot;

  // value method ddr_A_M_m_awqos
  output [3 : 0] ddr_A_M_awqos;

  // value method ddr_A_M_m_awregion
  output [3 : 0] ddr_A_M_awregion;

  // value method ddr_A_M_m_awuser

  // action method ddr_A_M_m_awready
  input  ddr_A_M_awready;

  // value method ddr_A_M_m_wvalid
  output ddr_A_M_wvalid;

  // value method ddr_A_M_m_wdata
  output [511 : 0] ddr_A_M_wdata;

  // value method ddr_A_M_m_wstrb
  output [63 : 0] ddr_A_M_wstrb;

  // value method ddr_A_M_m_wlast
  output ddr_A_M_wlast;

  // value method ddr_A_M_m_wuser

  // action method ddr_A_M_m_wready
  input  ddr_A_M_wready;

  // action method ddr_A_M_m_bvalid
  input  ddr_A_M_bvalid;
  input  [15 : 0] ddr_A_M_bid;
  input  [1 : 0] ddr_A_M_bresp;

  // value method ddr_A_M_m_bready
  output ddr_A_M_bready;

  // value method ddr_A_M_m_arvalid
  output ddr_A_M_arvalid;

  // value method ddr_A_M_m_arid
  output [15 : 0] ddr_A_M_arid;

  // value method ddr_A_M_m_araddr
  output [63 : 0] ddr_A_M_araddr;

  // value method ddr_A_M_m_arlen
  output [7 : 0] ddr_A_M_arlen;

  // value method ddr_A_M_m_arsize
  output [2 : 0] ddr_A_M_arsize;

  // value method ddr_A_M_m_arburst
  output [1 : 0] ddr_A_M_arburst;

  // value method ddr_A_M_m_arlock
  output ddr_A_M_arlock;

  // value method ddr_A_M_m_arcache
  output [3 : 0] ddr_A_M_arcache;

  // value method ddr_A_M_m_arprot
  output [2 : 0] ddr_A_M_arprot;

  // value method ddr_A_M_m_arqos
  output [3 : 0] ddr_A_M_arqos;

  // value method ddr_A_M_m_arregion
  output [3 : 0] ddr_A_M_arregion;

  // value method ddr_A_M_m_aruser

  // action method ddr_A_M_m_arready
  input  ddr_A_M_arready;

  // action method ddr_A_M_m_rvalid
  input  ddr_A_M_rvalid;
  input  [15 : 0] ddr_A_M_rid;
  input  [511 : 0] ddr_A_M_rdata;
  input  [1 : 0] ddr_A_M_rresp;
  input  ddr_A_M_rlast;

  // value method ddr_A_M_m_rready
  output ddr_A_M_rready;

  // value method ddr_B_M_m_awvalid
  output ddr_B_M_awvalid;

  // value method ddr_B_M_m_awid
  output [15 : 0] ddr_B_M_awid;

  // value method ddr_B_M_m_awaddr
  output [63 : 0] ddr_B_M_awaddr;

  // value method ddr_B_M_m_awlen
  output [7 : 0] ddr_B_M_awlen;

  // value method ddr_B_M_m_awsize
  output [2 : 0] ddr_B_M_awsize;

  // value method ddr_B_M_m_awburst
  output [1 : 0] ddr_B_M_awburst;

  // value method ddr_B_M_m_awlock
  output ddr_B_M_awlock;

  // value method ddr_B_M_m_awcache
  output [3 : 0] ddr_B_M_awcache;

  // value method ddr_B_M_m_awprot
  output [2 : 0] ddr_B_M_awprot;

  // value method ddr_B_M_m_awqos
  output [3 : 0] ddr_B_M_awqos;

  // value method ddr_B_M_m_awregion
  output [3 : 0] ddr_B_M_awregion;

  // value method ddr_B_M_m_awuser

  // action method ddr_B_M_m_awready
  input  ddr_B_M_awready;

  // value method ddr_B_M_m_wvalid
  output ddr_B_M_wvalid;

  // value method ddr_B_M_m_wdata
  output [511 : 0] ddr_B_M_wdata;

  // value method ddr_B_M_m_wstrb
  output [63 : 0] ddr_B_M_wstrb;

  // value method ddr_B_M_m_wlast
  output ddr_B_M_wlast;

  // value method ddr_B_M_m_wuser

  // action method ddr_B_M_m_wready
  input  ddr_B_M_wready;

  // action method ddr_B_M_m_bvalid
  input  ddr_B_M_bvalid;
  input  [15 : 0] ddr_B_M_bid;
  input  [1 : 0] ddr_B_M_bresp;

  // value method ddr_B_M_m_bready
  output ddr_B_M_bready;

  // value method ddr_B_M_m_arvalid
  output ddr_B_M_arvalid;

  // value method ddr_B_M_m_arid
  output [15 : 0] ddr_B_M_arid;

  // value method ddr_B_M_m_araddr
  output [63 : 0] ddr_B_M_araddr;

  // value method ddr_B_M_m_arlen
  output [7 : 0] ddr_B_M_arlen;

  // value method ddr_B_M_m_arsize
  output [2 : 0] ddr_B_M_arsize;

  // value method ddr_B_M_m_arburst
  output [1 : 0] ddr_B_M_arburst;

  // value method ddr_B_M_m_arlock
  output ddr_B_M_arlock;

  // value method ddr_B_M_m_arcache
  output [3 : 0] ddr_B_M_arcache;

  // value method ddr_B_M_m_arprot
  output [2 : 0] ddr_B_M_arprot;

  // value method ddr_B_M_m_arqos
  output [3 : 0] ddr_B_M_arqos;

  // value method ddr_B_M_m_arregion
  output [3 : 0] ddr_B_M_arregion;

  // value method ddr_B_M_m_aruser

  // action method ddr_B_M_m_arready
  input  ddr_B_M_arready;

  // action method ddr_B_M_m_rvalid
  input  ddr_B_M_rvalid;
  input  [15 : 0] ddr_B_M_rid;
  input  [511 : 0] ddr_B_M_rdata;
  input  [1 : 0] ddr_B_M_rresp;
  input  ddr_B_M_rlast;

  // value method ddr_B_M_m_rready
  output ddr_B_M_rready;

  // action method m_env_ready
  input  m_env_ready_env_ready;

  // value method m_halted
  output m_halted;

  // action method m_glcount
  input  [63 : 0] m_glcount_glcount;

  // signals for module outputs
  wire [511 : 0] ddr_A_M_wdata, ddr_B_M_wdata, host_AXI4_S_rdata;
  wire [63 : 0] ddr_A_M_araddr,
		ddr_A_M_awaddr,
		ddr_A_M_wstrb,
		ddr_B_M_araddr,
		ddr_B_M_awaddr,
		ddr_B_M_wstrb;
  wire [31 : 0] host_AXI4L_S_rdata;
  wire [15 : 0] ddr_A_M_arid,
		ddr_A_M_awid,
		ddr_B_M_arid,
		ddr_B_M_awid,
		host_AXI4_S_bid,
		host_AXI4_S_rid;
  wire [7 : 0] ddr_A_M_arlen, ddr_A_M_awlen, ddr_B_M_arlen, ddr_B_M_awlen;
  wire [3 : 0] ddr_A_M_arcache,
	       ddr_A_M_arqos,
	       ddr_A_M_arregion,
	       ddr_A_M_awcache,
	       ddr_A_M_awqos,
	       ddr_A_M_awregion,
	       ddr_B_M_arcache,
	       ddr_B_M_arqos,
	       ddr_B_M_arregion,
	       ddr_B_M_awcache,
	       ddr_B_M_awqos,
	       ddr_B_M_awregion;
  wire [2 : 0] ddr_A_M_arprot,
	       ddr_A_M_arsize,
	       ddr_A_M_awprot,
	       ddr_A_M_awsize,
	       ddr_B_M_arprot,
	       ddr_B_M_arsize,
	       ddr_B_M_awprot,
	       ddr_B_M_awsize;
  wire [1 : 0] ddr_A_M_arburst,
	       ddr_A_M_awburst,
	       ddr_B_M_arburst,
	       ddr_B_M_awburst,
	       host_AXI4L_S_bresp,
	       host_AXI4L_S_rresp,
	       host_AXI4_S_bresp,
	       host_AXI4_S_rresp;
  wire ddr_A_M_arlock,
       ddr_A_M_arvalid,
       ddr_A_M_awlock,
       ddr_A_M_awvalid,
       ddr_A_M_bready,
       ddr_A_M_rready,
       ddr_A_M_wlast,
       ddr_A_M_wvalid,
       ddr_B_M_arlock,
       ddr_B_M_arvalid,
       ddr_B_M_awlock,
       ddr_B_M_awvalid,
       ddr_B_M_bready,
       ddr_B_M_rready,
       ddr_B_M_wlast,
       ddr_B_M_wvalid,
       host_AXI4L_S_arready,
       host_AXI4L_S_awready,
       host_AXI4L_S_bvalid,
       host_AXI4L_S_rvalid,
       host_AXI4L_S_wready,
       host_AXI4_S_arready,
       host_AXI4_S_awready,
       host_AXI4_S_bvalid,
       host_AXI4_S_rlast,
       host_AXI4_S_rvalid,
       host_AXI4_S_wready,
       m_halted;

endmodule  // mkAWSteria_HW

